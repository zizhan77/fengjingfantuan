<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mem.vo.business.base.dao.OrganizerDao">
  <resultMap id="BaseResultMap" type="com.mem.vo.business.base.model.po.Organizer">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
    <result column="chargeName" jdbcType="VARCHAR" property="chargeName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, phone, password,chargeName , status, create_time, create_user, update_time, update_user,
    is_delete
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from organizer
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from organizer
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.mem.vo.business.base.model.po.Organizer">
    insert into organizer (id, name,chargeName ,phone,
      password, status,
      is_delete)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},#{chargeName,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
      #{password,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER},
      #{isDelete,jdbcType=INTEGER})
  </insert>

  <update id="updateByPrimaryKey" parameterType="com.mem.vo.business.base.model.po.Organizer">
    update organizer
    set name = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="queryPage" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from organizer
  </select>
  <update id="update" parameterType="com.mem.vo.business.base.model.po.Organizer">
    update organizer
    set
    <trim  suffixOverrides="," >
      <if test="name != null  and name != '' ">
      name = #{name,jdbcType=VARCHAR},
    </if>
      <if test="phone != null  and phone != '' ">
      phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password != null  and password != '' ">
      password = #{password,jdbcType=VARCHAR},
    </if>

      <if test="status != null  and status != '' ">
      status = #{status,jdbcType=INTEGER},
      </if>

      <if test="isDelete != null  and isDelete != '' ">
      is_delete = #{isDelete,jdbcType=VARCHAR}
      </if>

      <if test="chargeName != null  and chargeName != '' ">
        chargeName = #{chargeName,jdbcType=VARCHAR}
      </if>
    </trim>
    where id = #{id,jdbcType=INTEGER}
  </update>
<!--

id, name, phone, password,chargeName , status, create_time, create_user, update_time, update_user,
    is_delete
-->

  <select id="queryBy" resultMap="BaseResultMap" parameterType="com.mem.vo.business.base.model.po.Organizer">
    select
    <include refid="Base_Column_List" />
    from organizer
    where 1=1
      <if test="id != null  and id != '' ">
          and id = #{id,jdbcType=VARCHAR}
      </if>
    <if test="name != null  and name != '' ">
      and name = #{name,jdbcType=VARCHAR}
    </if>
    <if test="phone != null  and phone != '' ">
      and phone = #{phone,jdbcType=VARCHAR}
    </if>
    <if test="password != null  and password != '' ">
      and password = #{password,jdbcType=VARCHAR}
    </if>

    <if test="status != null  and status != '' ">
      and status = #{status,jdbcType=INTEGER}
    </if>

    <if test="isDelete != null  and isDelete != '' ">
      and is_delete = #{isDelete,jdbcType=VARCHAR}
    </if>

    <if test="chargeName != null  and chargeName != '' ">
      and chargeName = #{chargeName,jdbcType=VARCHAR}
    </if>
  </select>
</mapper>