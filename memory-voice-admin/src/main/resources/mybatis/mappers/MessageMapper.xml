<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mem.vo.business.base.dao.MessageMapper">
  <resultMap id="BaseResultMap" type="com.mem.vo.business.base.model.po.Message">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="sponsorId" jdbcType="INTEGER" property="sponsorId" />
    <result column="articleId" jdbcType="VARCHAR" property="articleId" />
    <result column="organizerId" jdbcType="INTEGER" property="organizerId" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, sponsorId, articleId, organizerId, status, create_time, create_user, update_time,
    update_user, is_delete
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from myMessage
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from myMessage
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.mem.vo.business.base.model.po.Message">
    insert into myMessage (id, sponsorId, articleId,
      organizerId, status,
      is_delete)
    values (#{id,jdbcType=INTEGER}, #{sponsorId,jdbcType=INTEGER}, #{articleId,jdbcType=VARCHAR},
      #{organizerId,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR},
      #{isDelete,jdbcType=TINYINT})
  </insert>

  <update id="updateByPrimaryKey" parameterType="com.mem.vo.business.base.model.po.Message">
    update myMessage
    set sponsorId = #{sponsorId,jdbcType=INTEGER},
      articleId = #{articleId,jdbcType=VARCHAR},
      organizerId = #{organizerId,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>



  <select id="selectByMessage"  resultType="com.mem.vo.business.base.model.vo.MessageVO">
    SELECT m.status as status, m.id,s.name AS sponsorName,a.content AS articleName,m.create_time AS messageTime,s.`phone` AS sponsorPhone, o.`name` AS organizerName , o.`phone` AS organizerPhone
    FROM myMessage m LEFT JOIN sponsor s ON m.`sponsorId`= s.id LEFT JOIN article a ON m.`articleId`=a.id LEFT JOIN organizer o ON o.`id`=m.`organizerId`
    WHERE  m.is_delete = 0

    <if test="message.organizerId != null and message.organizerId != ''">
      and m.organizerId = #{message.organizerId}
    </if>

    <if test="message.status != null and message.status != ''">
    and m.status = #{message.status}
    </if>
    order by m.create_time desc
  </select>


  <select id="selectById" parameterType="com.mem.vo.business.base.model.po.Message" resultType="com.mem.vo.business.base.model.vo.MessageVO">
    SELECT  m.status as status, m.id,s.name AS sponsorName,a.content AS articleName,m.create_time AS messageTime,s.`phone` AS sponsorPhone, o.`name` AS organizerName , o.`phone` AS organizerPhone
    FROM myMessage m LEFT JOIN sponsor s ON m.`sponsorId`= s.id LEFT JOIN article a ON m.`articleId`=a.id LEFT JOIN organizer o ON o.`id`=m.`organizerId`
    WHERE  m.is_delete = 0
    <if test="id != null and id != ''">
      and m.id = #{id}
    </if>
  </select>


  <update id="updateStatusById" parameterType="java.lang.Long">
    update myMessage
    set

      status = 1

    where id = #{id}
  </update>


  <update id="updateByOrganizerId" parameterType="java.lang.Long">
    update myMessage
    set
      status = 1
    where organizerId = #{organizerId}
    and TIMESTAMPDIFF(SECOND,create_time,NOW())>0
  </update>

</mapper>