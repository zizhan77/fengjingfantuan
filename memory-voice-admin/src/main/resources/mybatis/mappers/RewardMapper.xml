<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mem.vo.business.base.dao.RewardDao">

    <resultMap id="BaseResultMap" type="com.mem.vo.business.base.model.po.Reward">
        <result column="id" property="id" jdbcType="INTEGER"/>
        <result column="prize_id" property="prizeId" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="time" property="time" jdbcType="TIMESTAMP"/>
        <result column="prize_type" property="prizeType" jdbcType="TINYINT"/>
        <result column="prize_name" property="prizeName" jdbcType="VARCHAR"/>
        <result column="contact_name" property="contactName" jdbcType="VARCHAR"/>
        <result column="contact_phone" property="contactPhone" jdbcType="VARCHAR"/>
        <result column="contact_province" property="contactProvince" jdbcType="VARCHAR"/>
        <result column="contact_address" property="contactAddress" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="is_delete" property="isDelete" jdbcType="TINYINT"/>
        <result column="draw_code" property="drawCode" jdbcType="VARCHAR"/>
        <result column="reward_description" property="rewardDescription" jdbcType="VARCHAR"/>
        <result column="activity_id" property="activityId" jdbcType="INTEGER"/>
        <result column="integral_num" property="integralNum" jdbcType="INTEGER"/>
        <result column="miniType" property="miniType" jdbcType="INTEGER"/>
        <result column="keyId" property="keyId" jdbcType="INTEGER"/>
        <result column="prizedId" property="prizedId" jdbcType="INTEGER"/>
    </resultMap>
    <update id="updateByIdToIntegralRole" parameterType="com.mem.vo.business.base.model.po.IntegralRoleClass" >
        update integral_role set updatetime =NOW()
        <if test="name !=null and name != '' ">
            , name = #{name}
        </if>
        <if test="addcount !=null  ">
            , addcount = #{addcount}
        </if>
        <if test="number !=null ">
            , number = #{number}
        </if>
        <if test="numofday !=null ">
            , numofday = #{numofday}
        </if>
        <if test="status !=null ">
            , status = #{status}
        </if>
        <if test="otherjson !=null and otherjson != '' ">
            , otherjson = #{otherjson}
        </if>

        where  id=#{id}
    </update>
    <update id="updateRewardFlag" parameterType="int">
        UPDATE `reward`
          `status` = '1'
            WHERE
                `id` = #{id};
    </update>
    <select id="getUserDefaultIntegral" resultType="int">
         SELECT otherjson FROM integral_role WHERE id= 1 and  status = 0
    </select>
    <select id="getUserIntegralFlagCount" resultType="int">
        SELECT addcount FROM integral_role WHERE id= 1 and  status = 0
    </select>
    <select id="getNewUserIntegral" resultType="int">
          SELECT addcount FROM integral_role WHERE id= 4 and  status = 0
    </select>
    
    <select id="integralRoleList"  resultType="com.mem.vo.business.base.model.po.IntegralRoleClass">
        select * from integral_role
        <if test="id!=null">
            where  id = #{id}
        </if>
    </select>
<!--    <select id="queryListByUserCount" resultType="int">
                    SELECT count(1)
            FROM reward r
            JOIN user u ON r.user_id = u.id
            WHERE r.prize_type=#{type}
            AND u.id = #{id}

    </select>-->
    <select id="queryListByUserCount" resultType="int">
                SELECT count(1)
            FROM reward r

            JOIN user u ON r.user_id = u.id
            WHERE r.prize_type=#{type}
            AND u.id = #{id}

    </select>

    <select id="queryYouhuiquan" resultType="com.mem.vo.business.base.model.vo.RewardVO">

          SELECT
                       r.reward_description as des,
                        r.miniType as miniType,
                        r.id as id,
                        r.`prize_name` as prizeName,
                        r.`time` as time,
                        r.`status` as status,
                        r.prize_type as prizeType,
                        r.contact_name as contactName,
                        r.contact_province as contactProvince,
                        r.contact_address as contactAddress,
                        c.url,
                        sp.thumb_url AS spurl,
                        x.isChange as isChange,
                        x.`codeKey` as `key` ,
                        x.`password` as `password`,
                        r.prize_id as prizedId
                            FROM reward r
                             LEFT join changecode x on x.id = r.keyId
                           LEFT JOIN codetype c on c.id = x.codeType
                            LEFT JOIN sponsor sp ON c.sponsorId = sp.id

                            JOIN user u ON r.user_id = u.id
                            WHERE r.prize_type=#{type}
                            AND u.id = #{id}
                            ORDER BY r.time
                limit #{paging.start},#{paging.pageSize}

    </select>
    <select id="queryListByUser" resultType="com.mem.vo.business.base.model.vo.RewardVO">
                          SELECT
                       r.reward_description as des,
                        r.miniType as miniType,
                        r.id as id,
                        r.`prize_name` as prizeName,
                        r.`time` as time,
                        r.`status` as status,
                        r.prize_type as prizeType,
                        r.contact_name as contactName,
                        r.contact_province as contactProvince,
                        r.contact_address as contactAddress,
                        r.prize_id as prizedId

                            FROM reward r

                            JOIN user u ON r.user_id = u.id
                            WHERE r.prize_type=#{type}
                            AND u.id = #{id}
                            ORDER BY r.time
                limit #{paging.start},#{paging.pageSize}

    </select>

    <select id="queryListByCount" resultType="int" parameterType="com.mem.vo.business.base.model.vo.RewardQueryDto">

        SELECT count(1)
        FROM `reward` r LEFT JOIN `activity` a ON a.`id`=r.`activity_id`

        LEFT JOIN `user` u ON u.`id` = r.`user_id`

        LEFT join changecode c on c.id = r.keyId

        LEFT JOIN codetype t on t.id = c.codeType

        WHERE   r.prize_type != 3


        <if test="dto.contactPhone != null  and dto.contactPhone != '' ">
            AND u.`phone_number` = #{dto.contactPhone}
        </if>
        <if test="dto.prizeType!= null   ">
            AND r.`prize_type` = #{dto.prizeType}
        </if>
        <if test="dto.prizeName != null  and dto.prizeName != '' ">
            AND r.`prize_name` like "%${dto.prizeName}%"
        </if>
        <if test="dto.activityName != null  and dto.activityName != '' ">
        AND a.`activity_title` like "%${dto.activityName}%"
        </if>
        <if test="dto.startsedate != null  and dto.startsedate != '' ">
            AND r.`time` >= #{dto.startsedate}
        </if>
        <if test="dto.endsedate != null  and dto.endsedate != '' ">
            AND r.`time` &lt;= #{dto.endsedate}
        </if>

    </select>
    <select id="queryListBy" resultType="com.mem.vo.business.base.model.vo.RewardVO" parameterType="com.mem.vo.business.base.model.vo.RewardQueryDto">

        SELECT t.des as codeDes,
        r.reward_description as des,
        t.url as url,
        a.activity_title as activityName,
        c.isChange as isChange,
        c.`codeKey` as `key` ,
        c.`password` as `password`,
        r.miniType as miniType,
        r.id as id,
        r.`prize_name` as prizeName,
        r.`time` as time,
        r.`status` as status,
        r.prize_type as prizeType,
        r.contact_name as contactName,
       u.phone_number as contactPhone,
        r.contact_province as contactProvince,
        r.contact_address as contactAddress
        FROM `reward` r LEFT JOIN `activity` a ON a.`id`=r.`activity_id`

        LEFT JOIN `user` u ON u.`id` = r.`user_id`

        LEFT join changecode c on c.id = r.keyId

        LEFT JOIN codetype t on t.id = c.codeType

        WHERE   r.prize_type != 3

        <if test="dto.contactPhone != null  and dto.contactPhone != '' ">
            AND u.`phone_number` = #{dto.contactPhone}
        </if>
        <if test="dto.prizeType!= null   ">
            AND r.`prize_type` = #{dto.prizeType}
        </if>
        <if test="dto.prizeName != null  and dto.prizeName != '' ">
            AND r.`prize_name` like "%${dto.prizeName}%"
        </if>
        <if test="dto.activityName != null  and dto.activityName != '' ">
            AND a.`activity_title` like "%${dto.activityName}%"
        </if>
        <if test="dto.startsedate != null  and dto.startsedate != '' ">
            AND r.`time` >= #{dto.startsedate}
        </if>
        <if test="dto.endsedate != null  and dto.endsedate != '' ">
            AND r.`time` &lt;= #{dto.endsedate}
        </if>

        order by r.time

        limit #{paging.start},#{paging.pageSize}
    </select>

    <select id="getUserForTickrt" resultType="com.mem.vo.business.base.model.po.Reward">
        SELECT * FROM reward r
        WHERE r.user_id=#{userid}
        AND r.prize_type=#{code}
        and r.time between  #{first} and  #{last}


    </select>

    <!-- reward table all fields -->
    <sql id="Base_Column_List">
		 id,
		prize_id,
		user_id,
		time,
		prize_type,
		prize_name,
		contact_name,
		contact_phone,
		contact_province,
		contact_address,
		status,
		draw_code,
		reward_description,
		activity_id,
		integral_num,
		miniType,
		keyId,
		prizedId
	</sql>
    <!-- 查询条件 -->
    <sql id="whereCondition">
        where is_delete = 0
        <trim suffixOverrides=",">
            <if test="condition.id != null">
                and id = #{condition.id,jdbcType=INTEGER}
            </if>

            <if test="condition.prizeId != null">
                and prize_id = #{condition.prizeId,jdbcType=INTEGER}
            </if>

            <if test="condition.userId != null">
                and user_id = #{condition.userId,jdbcType=INTEGER}
            </if>

            <if test="condition.time != null">
                and time = #{condition.time,jdbcType=TIMESTAMP}
            </if>
            <if test="condition.prizeType != null">
                and prize_type = #{condition.prizeType,jdbcType=TINYINT}
            </if>

            <if test="condition.prizeName != null and condition.prizeName != ''">
                and prize_name = #{condition.prizeName,jdbcType=VARCHAR}
            </if>

            <if test="condition.contactName != null and condition.contactName != ''">
                and contact_name = #{condition.contactName,jdbcType=VARCHAR}
            </if>

            <if test="condition.contactPhone != null and condition.contactPhone != ''">
                and contact_phone = #{condition.contactPhone,jdbcType=VARCHAR}
            </if>

            <if test="condition.contactProvince != null and condition.contactProvince != ''">
                and contact_province = #{condition.contactProvince,jdbcType=VARCHAR}
            </if>

            <if test="condition.contactAddress != null and condition.contactAddress != ''">
                and contact_address = #{condition.contactAddress,jdbcType=VARCHAR}
            </if>

            <if test="condition.status != null">
                and status = #{condition.status,jdbcType=TINYINT}
            </if>


            <if test="condition.drawCode != null and condition.drawCode != ''">
                and draw_code = #{condition.drawCode,jdbcType=VARCHAR}
            </if>

            <if test="condition.rewardDescription != null and condition.rewardDescription != ''">
                and reward_description = #{condition.rewardDescription,jdbcType=VARCHAR}
            </if>

            <if test="condition.activityId != null">
                and activity_id = #{condition.activityId,jdbcType=INTEGER}
            </if>

            <if test="condition.integralNum != null">
                and integral_num = #{condition.integralNum,jdbcType=INTEGER}
            </if>
            <if test="condition.miniType != null">
                and miniType = #{condition.miniType,jdbcType=TINYINT}
            </if>
            <if test="condition.keyId != null">
                and keyId = #{condition.keyId,jdbcType=TINYINT}
            </if>
            <if test="condition.prizedId != null">
                and prizedId = #{condition.prizedId,jdbcType=INTEGER}
            </if>

        </trim>
    </sql>

    <!-- 单个插入，只插入不为空的字段  -->
    <insert id="insert" parameterType="com.mem.vo.business.base.model.po.Reward" useGeneratedKeys="true" keyProperty="id">
        insert into reward
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="prizeId != null  ">
                prize_id,
            </if>
            <if test="userId != null  ">
                user_id,
            </if>
            <if test="time != null  ">
                time,
            </if>
            <if test="prizeType != null  ">
                prize_type,
            </if>
            <if test="prizeName != null  and prizeName != '' ">
                prize_name,
            </if>
            <if test="contactName != null  and contactName != '' ">
                contact_name,
            </if>
            <if test="contactPhone != null  and contactPhone != '' ">
                contact_phone,
            </if>
            <if test="contactProvince != null  and contactProvince != '' ">
                contact_province,
            </if>
            <if test="contactAddress != null  and contactAddress != '' ">
                contact_address,
            </if>
            <if test="status != null  ">
                status,
            </if>
            <if test="isDelete != null  ">
                is_delete,
            </if>
            <if test="drawCode != null  and drawCode != '' ">
                draw_code,
            </if>
            <if test="rewardDescription != null  and rewardDescription != '' ">
                reward_description,
            </if>
            <if test="activityId != null  ">
                activity_id,
            </if>
            <if test="integralNum != null  ">
                integral_num,
            </if>
            <if test="miniType != null">
                miniType,
            </if>
            <if test="keyId != null">
                keyId,
            </if>
            <if test="prizedId != null">
                prizedId,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="prizeId != null  ">
                #{prizeId,jdbcType=INTEGER},
            </if>
            <if test="userId != null  ">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="time != null  ">
                #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="prizeType != null  ">
                #{prizeType,jdbcType=TINYINT},
            </if>
            <if test="prizeName != null  and prizeName != '' ">
                #{prizeName,jdbcType=VARCHAR},
            </if>
            <if test="contactName != null  and contactName != '' ">
                #{contactName,jdbcType=VARCHAR},
            </if>
            <if test="contactPhone != null  and contactPhone != '' ">
                #{contactPhone,jdbcType=VARCHAR},
            </if>
            <if test="contactProvince != null  and contactProvince != '' ">
                #{contactProvince,jdbcType=VARCHAR},
            </if>
            <if test="contactAddress != null  and contactAddress != '' ">
                #{contactAddress,jdbcType=VARCHAR},
            </if>
            <if test="status != null  ">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="isDelete != null  ">
                #{isDelete,jdbcType=TINYINT},
            </if>
            <if test="drawCode != null  and drawCode != '' ">
                #{drawCode,jdbcType=VARCHAR},
            </if>
            <if test="rewardDescription != null  and rewardDescription != '' ">
                #{rewardDescription,jdbcType=VARCHAR},
            </if>
            <if test="activityId != null  ">
                #{activityId,jdbcType=INTEGER},
            </if>
            <if test="integralNum != null  ">
                #{integralNum,jdbcType=INTEGER},
            </if>
            <if test="miniType != null">
                #{miniType},
            </if>
            <if test="keyId != null">
                #{keyId},
            </if>
            <if test="prizedId != null">
                #{prizedId},
            </if>
        </trim>
    </insert>

    <!-- 修改记录，只修改只不为空的字段 -->
    <update id="updateById" parameterType="com.mem.vo.business.base.model.po.Reward">
        update reward set
        <trim suffixOverrides=",">
            <if test="prizeId != null  ">
                prize_id=#{prizeId,jdbcType=INTEGER},
            </if>
            <if test="userId != null  ">
                user_id=#{userId,jdbcType=INTEGER},
            </if>
            <if test="time != null  ">
                time=#{time,jdbcType=TIMESTAMP},
            </if>
            <if test="prizeType != null  ">
                prize_type=#{prizeType,jdbcType=TINYINT},
            </if>
            <if test="prizeName != null  and prizeName != '' ">
                prize_name=#{prizeName,jdbcType=VARCHAR},
            </if>
            <if test="contactName != null  and contactName != '' ">
                contact_name=#{contactName,jdbcType=VARCHAR},
            </if>
            <if test="contactPhone != null  and contactPhone != '' ">
                contact_phone=#{contactPhone,jdbcType=VARCHAR},
            </if>
            <if test="contactProvince != null  and contactProvince != '' ">
                contact_province=#{contactProvince,jdbcType=VARCHAR},
            </if>
            <if test="contactAddress != null  and contactAddress != '' ">
                contact_address=#{contactAddress,jdbcType=VARCHAR},
            </if>
            <if test="status != null  ">
                `status`=#{status,jdbcType=TINYINT},
            </if>
            <if test="drawCode != null  and drawCode != '' ">
                draw_code=#{drawCode,jdbcType=VARCHAR},
            </if>
            <if test="rewardDescription != null  and rewardDescription != '' ">
                reward_description=#{rewardDescription,jdbcType=VARCHAR},
            </if>
            <if test="activityId != null  ">
                activity_id=#{activityId,jdbcType=INTEGER},
            </if>
            <if test="integralNum != null  ">
                integral_num=#{integralNum,jdbcType=INTEGER},
            </if>
            <if test="miniType != null">
                miniType=#{miniType},
            </if>
            <if test="keyId != null">
                keyId=#{keyId},
            </if>
            <if test="prizedId != null">
                prizedId=#{prizedId},
            </if>
        </trim>
        where id=#{id,jdbcType=INTEGER} and is_delete = 0
    </update>

    <!-- 删除记录 -->
    <update id="deleteById" parameterType="java.lang.Long">
		update reward set is_delete = 1 where id = #{id,jdbcType=BIGINT}  and is_delete = 0
	</update>

    <!-- 根据id查询 奖品信息明细表 -->
    <select id="findById" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from reward where id = #{id,jdbcType=INTEGER}
    </select>

    <!-- 根据条件查询列表 -->
    <select id="findByCondition" resultMap="BaseResultMap"
            parameterType="com.mem.vo.business.base.model.po.RewardQuery">
        select
        <include refid="Base_Column_List"/>
        from reward
        <include refid="whereCondition"/>
    </select>
    <select id="selectIdByEt" parameterType="com.mem.vo.business.base.model.po.RewardQuery"
            resultType="java.lang.Integer">
		select id from reward where
	activity_id=#{condition.activityId,jdbcType=BIGINT} and prize_type=#{condition.prizeType,jdbcType=TINYINT} and draw_code = ''
	</select>

    <select id="findBy" parameterType="com.mem.vo.business.base.model.po.RewardQuery"
            resultType="com.mem.vo.business.base.model.vo.RewardVO">
        SELECT r.keyId as keyId,r.miniType as miniType,r.id as id,r.`prize_name` as prizeName,r.`time` as
        time,r.`status` as status,u.`phone_number` as contactPhone
        FROM `reward` r LEFT JOIN `activity` a ON a.`id`=r.`activity_id` LEFT JOIN `user` u ON u.`id` = r.`user_id`
        WHERE a.`id` = #{query.activityId}
        <if test="query.contactPhone != null  and query.contactPhone != '' ">
            AND u.`phone_number` = #{query.contactPhone}
        </if>
        <if test="query.status != null  and query.status != '' ">
            AND r.`status` = #{query.status}
        </if>
        <if test="query.prizeName != null  and query.prizeName != '' ">
            AND r.`prize_name` like "%"#{query.prizeName}"%"
        </if>
    </select>
    <select id="findByConditionAndDate" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from reward
        where is_delete = 0
        <trim suffixOverrides=",">
            <if test="condition.userId != null">
                and user_id = #{condition.userId,jdbcType=INTEGER}
            </if>
            <if test="condition.time != null">
                and MONTH(#{condition.time})= MONTH(now())
            </if>
            <if test="condition.status != null">
                and status = #{condition.status,jdbcType=TINYINT}
            </if>
            <if test="condition.miniType != null">
                and miniType = #{condition.miniType,jdbcType=TINYINT}
            </if>
            <if test="condition.prizeType != null">
                and prize_type = #{condition.prizeType,jdbcType=TINYINT}
            </if>
        </trim>
    </select>

    <select id="findByConditionAndCurrentDay" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from reward
        where is_delete = 0
        <trim suffixOverrides=",">
            <if test="condition.userId != null">
                and user_id = #{condition.userId,jdbcType=INTEGER}
            </if>
            <if test="condition.time != null">
                and  date_format(time,'%Y-%m-%d') = date_format(now(),'%Y-%m-%d')
            </if>
            <if test="condition.status != null">
                and status = #{condition.status,jdbcType=TINYINT}
            </if>
            <if test="condition.miniType != null">
                and miniType = #{condition.miniType,jdbcType=TINYINT}
            </if>
            <if test="condition.prizeType != null">
                and prize_type = #{condition.prizeType,jdbcType=TINYINT}
            </if>
        </trim>
    </select>


    <select id="findByUserId" resultType="com.mem.vo.business.base.model.vo.RewardVO">
        SELECT t.des as codeDes,
        r.reward_description as des,
        t.url as url,
        a.activity_title as activityName,
        c.isChange as isChange,
        c.`codeKey` as `key` ,
        c.`password` as `password`,
        r.miniType as miniType,
        r.id as id,
        r.`prize_name` as prizeName,
        r.`time` as time,
        r.`status` as status,
        r.prize_type as prizeType,
        r.contact_name as contactName,
        r.contact_phone as contactPhone,
        r.contact_province as contactProvince,
        r.contact_address as contactAddress
        FROM `reward` r LEFT JOIN `activity` a ON a.`id`=r.`activity_id`

        LEFT JOIN `user` u ON u.`id` = r.`user_id`

        LEFT join changecode c on c.id = r.keyId

        LEFT JOIN codetype t on t.id = c.codeType

        WHERE  r.user_id = #{id}  and r.prize_type<![CDATA[<>]]> 3
        ORDER BY r.time
    </select>

    <select id="findByActivityId" resultType="com.mem.vo.business.base.model.vo.RewardVO" parameterType="java.lang.Integer">
        SELECT t.des as codeDes,
        r.reward_description as des,
        t.url as url,
        a.activity_title as activityName,
        c.isChange as isChange,
        c.`codeKey` as `key` ,
        c.`password` as `password`,
        r.miniType as miniType,
        r.id as id,
        r.`prize_name` as prizeName,
        r.`time` as time,
        r.`status` as status,
        r.prize_type as prizeType,
        r.contact_name as contactName,
        r.contact_phone as contactPhone,
        r.contact_province as contactProvince,
        r.contact_address as contactAddress
        FROM `reward` r LEFT JOIN `activity` a ON a.`id`=r.`activity_id`

        LEFT JOIN `user` u ON u.`id` = r.`user_id`

        LEFT join changecode c on c.id = r.keyId

        LEFT JOIN codetype t on t.id = c.codeType

        WHERE  r.`activity_id` = #{activityId}  and r.prize_type<![CDATA[<>]]> 3
        ORDER BY r.time
    </select>
</mapper>
