<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mem.vo.business.base.dao.ActivitycountMapper">
  <resultMap id="BaseResultMap" type="com.mem.vo.business.base.model.po.Activitycount">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="activityId" jdbcType="VARCHAR" property="activityId" />
    <result column="userId" jdbcType="VARCHAR" property="userId" />
    <result column="date" jdbcType="VARCHAR" property="date" />
    <result column="count" jdbcType="VARCHAR" property="count" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, activityId, userId, date, count
  </sql>

  <insert id="updateabcd" >
   INSERT INTO `memvo_2`.`changecode` (`codeKey`, `codeType`)
   VALUES ('JJLDVIP',  '103');

  </insert>

  <select id="getabcd" resultType="com.mem.vo.business.base.model.vo.ActivitycountVO">
        SELECT a.id as activityId ,p.detail as activityName from
    activity a JOIN performance p ON a.performanceId = p.id
  </select>

  <select id="selectBy" resultMap="BaseResultMap">
    select
    id, activityId, userId, date, count
    from  activitycount
    where 1=1
    <if test="activityId != null  and activityId != '' ">
      and activityId=#{activityId}
    </if>
    <if test="userId != null  and userId != '' ">
      and userId=#{userId}
    </if>
    <if test="date != null  and date != '' ">
      and date=#{date}
    </if>
    <if test="count != null  and count != '' ">
      and count=#{count}
    </if>
  </select>


<insert id="insert">
  insert into activitycount (activityId, userId, date, count)
    values (#{activityId,jdbcType=VARCHAR},#{userId,jdbcType=VARCHAR},#{date,jdbcType=VARCHAR},#{count,jdbcType=VARCHAR})
</insert>

  <update id="update">
    update activitycount
    set count=count+1
    where 1=1
    <if test="activityId != null  and activityId != '' ">
      and activityId=#{activityId}
    </if>
    <if test="userId != null  and userId != '' ">
      and userId=#{userId}
    </if>
  </update>


  <select id="query" resultType="com.mem.vo.business.base.model.vo.ActivitycountVO">
    SELECT  a.activityId AS activityId ,a.date AS DATE ,
    IF(a.count IS NULL, 0, a.count) AS pv ,a.name AS activityName ,IF(b.count IS NULL, 0, b.count) AS uv ,IF(c.count IS NULL, 0, c.count) AS passCount FROM

    (SELECT `activityId`,`date`,`count`,b.content AS NAME FROM activitycount  a LEFT JOIN `article`  b ON b.`id` = a.`activityId` WHERE TO_DAYS(NOW())-TO_DAYS(DATE)&lt; #{date}  AND TO_DAYS(NOW())-TO_DAYS(DATE)+1 &gt; 0  GROUP BY activityId,DATE) a

    LEFT JOIN (SELECT `activityId`,`date`,`count`,b.content AS NAME FROM activitycount  a

    LEFT JOIN `article`  b ON b.`id` = a.`activityId` WHERE TO_DAYS(NOW())-TO_DAYS(DATE) &lt; #{date}  AND TO_DAYS(NOW())-TO_DAYS(DATE)+1 &gt; 0  GROUP BY activityId,DATE)  b

    ON a.activityId=b.activityId AND a.date=b.date

    LEFT JOIN (SELECT activity_id, update_time,COUNT(1) AS COUNT FROM `activity_user`  WHERE `pass_qty`=12 GROUP BY TO_DAYS(`update_time`)) c

    ON c.activity_id=a.activityId AND DATE_FORMAT(c.update_time,'%Y-%m-%d')=a.date

    <if test="activitycount.activityId != null  and activitycount.activityId != '' ">
      having a.activityId=#{activitycount.activityId}
    </if>
    ORDER BY a.activityId

  </select>

  <select id="queryByName" resultType="com.mem.vo.business.base.model.vo.ActivitycountVO">
    SELECT  a.activityId AS activityId ,a.date AS DATE ,
    IF(a.count IS NULL, 0, a.count) AS pv ,a.name AS activityName ,IF(b.count IS NULL, 0, b.count) AS uv ,IF(c.count IS NULL, 0, c.count) AS passCount FROM

    (SELECT `activityId`,`date`,`count`,b.content AS NAME FROM activitycount  a LEFT JOIN `article`  b ON b.`id` = a.`activityId`   GROUP BY activityId,DATE) a

    LEFT JOIN (SELECT `activityId`,`date`,`count`,b.content AS NAME FROM activitycount  a

    LEFT JOIN `article`  b ON b.`id` = a.`activityId`   GROUP BY activityId,DATE)  b

    ON a.activityId=b.activityId AND a.date=b.date

    LEFT JOIN (SELECT activity_id, update_time,COUNT(1) AS COUNT FROM `activity_user`  WHERE `pass_qty`=12 GROUP BY TO_DAYS(`update_time`)) c

    ON c.activity_id=a.activityId AND DATE_FORMAT(c.update_time,'%Y-%m-%d')=a.date

    <if test="activityName != null  and activityName != '' ">
      having a.name like  "%"#{activityName}"%"
    </if>
    ORDER BY a.activityId

  </select>


</mapper>