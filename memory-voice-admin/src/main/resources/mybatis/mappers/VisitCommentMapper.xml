<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mem.vo.business.base.dao.VisitCommentDao" >

    <resultMap id="BaseResultMap" type="com.mem.vo.business.base.model.po.VisitComment" >
        <result column="id" property="id" jdbcType="BIGINT"/>
        <result column="visit_id" property="visitId" jdbcType="BIGINT"/>
        <result column="visit_comment_id" property="visitCommentId" jdbcType="BIGINT"/>
        <result column="reply_create_user" property="replyCreateUser" jdbcType="BIGINT"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="avatarurl" property="avatarurl" jdbcType="VARCHAR"/>
        <result column="create_user" property="createUser" jdbcType="BIGINT"/>
        <result column="comments" property="comments" jdbcType="LONGVARCHAR"/>
        <result column="thumbnail_urls" property="thumbnailUrls" jdbcType="LONGVARCHAR"/>
        <result column="is_delete" property="isDelete" jdbcType="BIGINT"/>
        <result column="status" property="status" jdbcType="BIGINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!-- user table all fields -->
    <sql id="Base_Column_List" >
		id,
		visit_id,
		visit_comment_id,
		reply_create_user,
		user_name,
		avatarurl
		create_user,
		comments,
		thumbnail_urls,
		comments,
		is_delete,
		status,
		create_time,
		update_time
	</sql>

    <!-- 单个插入，只插入不为空的字段  -->
    <insert id="insert" parameterType="com.mem.vo.business.base.model.po.VisitComment"  useGeneratedKeys="true"
            keyProperty="id">
        insert into visit_comment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="visitId != null">
                visit_id,
            </if>
            <if test="createUser != null ">
                create_user,
            </if>
            <if test="comments != null  and comments != '' ">
                comments,
            </if>
            <if test="status != null  ">
                status,
            </if>
            <if test="createTime != null  ">
                create_time,
            </if>
            <if test="updateTime != null  ">
                update_time,
            </if>
            <if test="visitCommentId != null  ">
                visit_comment_id,
            </if>
            <if test="replyCreateUser != null  ">
                reply_create_user,
            </if>
            <if test="visitCommentId == null  ">
                visit_comment_id,
            </if>
            <if test="replyCreateUser == null  ">
                reply_create_user,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="visitId != null ">
                #{visitId,jdbcType=BIGINT},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=BIGINT},
            </if>
            <if test="comments != null  and comments != '' ">
                #{comments,jdbcType=LONGVARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null  ">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null  ">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="visitCommentId != null  ">
                #{visitCommentId,jdbcType=BIGINT},
            </if>
            <if test="replyCreateUser != null  ">
                #{replyCreateUser,jdbcType=BIGINT},
            </if>
            <if test="visitCommentId == null  ">
                0,
            </if>
            <if test="replyCreateUser == null  ">
                0,
            </if>
        </trim>
    </insert>


    <!-- 修改记录，只修改只不为空的字段 -->
    <update id="updateById" parameterType="com.mem.vo.business.base.model.po.VisitComment" >
        update visit_comment set
        <trim  suffixOverrides="," >
            <if test="visitId != null">
                visit_id=#{visitId,jdbcType=BIGINT},
            </if>
            <if test="createUser != null ">
                create_user=#{createUser,jdbcType=BIGINT},
            </if>
            <if test="comments != null  and comments != '' ">
                comments=#{comments,jdbcType=VARCHAR},
            </if>
            <if test="thumbnailUrls != null and thumbnailUrls != '' ">
                thumbnail_urls=#{thumbnailUrls,jdbcType=LONGVARCHAR},
            </if>
            <if test="isDelete != null ">
                is_delete=#{isDelete,jdbcType=BIGINT},
            </if>
            <if test="status != null  ">
                status=#{status,jdbcType=BIGINT},
            </if>
            <if test="createTime != null  ">
                create_time=#{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null  ">
                update_time=#{updateTime,jdbcType=TIMESTAMP},,
            </if>
        </trim>
        where id=#{id,jdbcType=BIGINT} and is_delete = 0
    </update>

    <!-- 删除记录 -->
    <update id="deleteById" parameterType="java.lang.Long">
		update visit_comment set is_delete = 1 where id = #{id,jdbcType=BIGINT}  and is_delete = 0
	</update>

    <!-- 根据id查询 接单中台表 -->
    <select id="findById"  resultMap="BaseResultMap" parameterType="java.lang.Long">
        select <include refid="Base_Column_List" />
        from visit_comment where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="findByPage" resultType="com.mem.vo.business.base.model.vo.VisitCommentVO">
             SELECT
                    vc.id,
                    vc.visit_id,
                    u.name,
                    u.avatarurl,
                    vc.create_user,
                    vc.comments,
                    vc.thumbnail_urls,
                    vc.is_delete,
                    vc.status,
                    vc.create_time,
                    vc.update_time
            FROM visit_comment vc left join user u on vc.create_user=u.id
         	WHERE vc.is_delete=0 and vc.visit_id=#{visitId}
            ORDER BY vc.update_time DESC
            limit #{paging.start},#{paging.pageSize}

    </select>

    <select id="findReplyByPage" resultType="com.mem.vo.business.base.model.vo.VisitReplyCommentVO">
            select
			vrc.id ,
			vrc.visit_id,
			vrc.visit_comment_id,
			user.name as reply_name,
			user.avatarurl reply_avatarurl,
			vrc.name,
            vrc.avatarurl,
            vrc.comments,
            vrc.thumbnail_urls,
            vrc.is_delete,
            vrc.status,
            vrc.create_time,
           	vrc.update_time
            from
            (SELECT
                    vc.id as id ,
                    vc.visit_id as visit_id,
                    vc.visit_comment_id as visit_comment_id,
                    vc.reply_create_user as reply_create_user,
                    u.name as name,
                    u.avatarurl as avatarurl,
                    vc.comments as comments,
                    vc.thumbnail_urls as thumbnail_urls,
                    vc.is_delete as is_delete,
                    vc.status as status,
                    vc.create_time as create_time,
                    vc.update_time as update_time
            FROM visit_comment vc left join user u on vc.create_user=u.id
         	WHERE vc.is_delete=0 and vc.visit_comment_id !=0 and vc.reply_create_user !=0 and vc.visit_id=#{visitId}
            ORDER BY vc.create_time DESC
            limit #{paging.start},#{paging.pageSize}) as vrc left join user on vrc.reply_create_user=user.id;
    </select>
</mapper>
